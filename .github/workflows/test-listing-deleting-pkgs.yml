name: See if images can be listed and deleted

on:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # clean:
  #   runs-on: ubuntu-latest
  #   name: Delete old nightly images
  #   steps:
  #     - name: delete old images
  #       uses: snok/container-retention-policy@v3.0.0
  #       with:
  #         account: user
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         image-names: ${{ env.IMAGE_NAME }}
  #         image-tags: "nightly-*"
  #         cut-off: 5d
  #         dry-run: true


  list-images-and-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run curl
        run: |
          IMAGE_NAME="${{ env.IMAGE_NAME }}"
          curl -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/user/packages/container/$IMAGE_NAME/versions/nightly-20250525"

      - name: List packages
        env:
          ENV_CONTEXT: "${{ toJson(env) }}"
          GITHUB_CONTEXT: "${{ toJson(github) }}"
          VARS_CONTEXT: "${{ toJson(vars) }}"
        run: |
          echo "listing packages"
          echo "REGISTRY - ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "------------- github context"
          echo "$GITHUB_CONTEXT"
          echo "------------- env context"
          echo "$ENV_CONTEXT"
          echo "------------- vars context"
          echo "$VARS_CONTEXT"
          echo "------------OTher env"
          env
          

      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata for Docker build
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #     flavor: latest=true
      #     tags: |
      #       type=semver,pattern={{version}}
      #       type=schedule,prefix=nightly-,pattern={{date 'YYYYMMDD'}}
      #       type=raw,enable=${{ github.event_name == 'workflow_dispatch' }},value=workflow_dispatch-{{branch}}-{{sha}}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
